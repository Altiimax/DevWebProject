# Generated by Django 3.0.3 on 2020-05-13 14:53

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('id_countryCode', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('countryName', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'Countries',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('id_groupName', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('groupDescription', models.TextField(blank=True, null=True)),
                ('groupType', models.CharField(blank=True, max_length=7, null=True)),
                ('groupRange', models.IntegerField()),
            ],
            options={
                'db_table': 'Groups',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GroupsMembers',
            fields=[
                ('id_groupsMembers', models.AutoField(primary_key=True, serialize=False)),
                ('groupAdmin', models.BooleanField()),
            ],
            options={
                'db_table': 'GroupsMembers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PersonReviews',
            fields=[
                ('id_personReview', models.AutoField(primary_key=True, serialize=False)),
                ('stars', models.IntegerField(validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)])),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'PersonReviews',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Persons',
            fields=[
                ('id_person', models.AutoField(primary_key=True, serialize=False)),
                ('lastName', models.CharField(max_length=150)),
                ('firstName', models.CharField(max_length=100)),
                ('alias', models.CharField(blank=True, max_length=100, null=True)),
                ('birthDate', models.DateField()),
                ('email', models.EmailField(max_length=254)),
                ('password', models.CharField(max_length=254)),
            ],
            options={
                'db_table': 'Persons',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tools',
            fields=[
                ('id_tool', models.AutoField(primary_key=True, serialize=False)),
                ('toolName', models.CharField(max_length=30)),
                ('toolDescription', models.TextField(blank=True, null=True)),
                ('toolPrice', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('id_person', models.ForeignKey(db_column='id_person', on_delete=django.db.models.deletion.DO_NOTHING, to='toolbox_app.Persons')),
            ],
            options={
                'db_table': 'Tools',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Towns',
            fields=[
                ('id_town', models.AutoField(primary_key=True, serialize=False)),
                ('postCode', models.IntegerField()),
                ('townName', models.CharField(max_length=30)),
                ('id_countryCode', models.ForeignKey(db_column='id_countryCode', on_delete=django.db.models.deletion.DO_NOTHING, to='toolbox_app.Countries')),
            ],
            options={
                'db_table': 'Towns',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ToolsGroups',
            fields=[
                ('id_toolGroups', models.AutoField(primary_key=True, serialize=False)),
                ('id_groupName', models.ForeignKey(db_column='id_groupName', on_delete=django.db.models.deletion.DO_NOTHING, to='toolbox_app.Groups')),
                ('id_tool', models.OneToOneField(db_column='id_tool', on_delete=django.db.models.deletion.DO_NOTHING, to='toolbox_app.Tools')),
            ],
            options={
                'db_table': 'ToolsGroups',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ToolReviews',
            fields=[
                ('id_toolReview', models.AutoField(primary_key=True, serialize=False)),
                ('stars', models.IntegerField(validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)])),
                ('comment', models.TextField(blank=True, null=True)),
                ('id_tool', models.ForeignKey(db_column='id_tool', on_delete=django.db.models.deletion.DO_NOTHING, to='toolbox_app.Tools')),
            ],
            options={
                'db_table': 'ToolReviews',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ToolImages',
            fields=[
                ('id_toolImage', models.AutoField(primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='toolsImgs')),
                ('id_tool', models.ForeignKey(db_column='id_tool', on_delete=django.db.models.deletion.DO_NOTHING, to='toolbox_app.Tools')),
            ],
            options={
                'db_table': 'ToolImages',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PersonsTowns',
            fields=[
                ('id_personsTowns', models.AutoField(primary_key=True, serialize=False)),
                ('id_person', models.ForeignKey(db_column='id_person', on_delete=django.db.models.deletion.DO_NOTHING, to='toolbox_app.Persons')),
                ('id_town', models.ForeignKey(db_column='id_town', on_delete=django.db.models.deletion.DO_NOTHING, to='toolbox_app.Towns')),
            ],
            options={
                'db_table': 'PersonsTowns',
                'managed': True,
            },
        ),
        migrations.AddConstraint(
            model_name='persons',
            constraint=models.UniqueConstraint(fields=('alias',), name='unique_alias'),
        ),
        migrations.AddConstraint(
            model_name='persons',
            constraint=models.UniqueConstraint(fields=('email',), name='unique_email'),
        ),
        migrations.AddField(
            model_name='personreviews',
            name='id_person',
            field=models.ForeignKey(db_column='id_person', on_delete=django.db.models.deletion.DO_NOTHING, to='toolbox_app.Persons'),
        ),
        migrations.AddField(
            model_name='groupsmembers',
            name='id_groupName',
            field=models.ForeignKey(db_column='id_groupName', on_delete=django.db.models.deletion.DO_NOTHING, to='toolbox_app.Groups'),
        ),
        migrations.AddField(
            model_name='groupsmembers',
            name='id_person',
            field=models.OneToOneField(db_column='id_person', on_delete=django.db.models.deletion.DO_NOTHING, to='toolbox_app.Persons'),
        ),
        migrations.AddField(
            model_name='groups',
            name='id_town',
            field=models.ForeignKey(db_column='id_town', on_delete=django.db.models.deletion.DO_NOTHING, to='toolbox_app.Towns'),
        ),
        migrations.AlterUniqueTogether(
            name='toolsgroups',
            unique_together={('id_tool', 'id_groupName')},
        ),
        migrations.AlterUniqueTogether(
            name='groupsmembers',
            unique_together={('id_person', 'id_groupName')},
        ),
    ]
